# Release PCL steps:
# 1. Check tests:
#   * debian:latest
#   * perception_pcl
# 2. Package for
#   * MacOS
#   * tar source release
#   * Windows Installers

trigger: none

resources:
- repo: self

variables:
  dockerHub: "PointCloudLibrary@hub.docker.com"
  dockerHubID: "pointcloudlibrary"
  isPreRelease: 0  # number of pre-release
  # version needs to be provided via the UI

stages:
- stage: Info
  displayName: "PCL-rc${{variables.isPreRelease}}"
  jobs:
  - job: additional_info
    displayName: "More Info"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      # find the commit hash on a quick non-forced update too
      fetchDepth: 10
    - script: |
        echo "Prev release: $(git tag | sort -rV | head -1 | cut -d- -f 2)"
        echo "Current release: "$(version)
        # can't test easily if version variable is empty or not
      displayName: "Test for and display version info"
- stage: Debian
  dependsOn: ["Info"]
  jobs:
  - job: BuildDebian
    displayName: "Build Debian Latest"
    timeoutInMinutes: 360
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      tag: "release"
    steps:
    - checkout: self
      # find the commit hash on a quick non-forced update too
      fetchDepth: 10
    - task: Docker@2
      displayName: "Build docker image"
      inputs:
        command: build
        arguments: |
          --no-cache
          -t $(dockerHubID)/release:$(tag)
        dockerfile: '$(Build.SourcesDirectory)/.dev/docker/release/Dockerfile'
        tags: "$(tag)"
- stage: ROS
  dependsOn: ["Info"]
  jobs:
  - job: PerceptionPCL
    displayName: "perception_pcl compile"
    timeoutInMinutes: 360
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        # Only ROS Melodic works with current releases of PCL
        # Kinetic has stopped supporting any version later than PCL 1.7.2
        ROS Melodic:
          flavor: "melodic"
    variables:
      tag: "ros"
    steps:
    - checkout: self
      # find the commit hash on a quick non-forced update too
      fetchDepth: 10
    - task: Docker@2
      displayName: "Build docker image"
      inputs:
        command: build
        arguments: |
          --no-cache
          --build-arg flavor=$(flavor)
          -t $(dockerHubID)/release:$(tag)
        dockerfile: '$(Build.SourcesDirectory)/.dev/docker/perception_pcl_ros/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)/.dev/docker/perception_pcl_ros'
        tags: "$(tag)"
- stage: Prepare
  dependsOn: ["Debian", "ROS"]
  jobs:
  - template: release/github.yaml
- stage: GitHub
  dependsOn: ["Prepare"]
  jobs:
  - template: release/github.yaml
